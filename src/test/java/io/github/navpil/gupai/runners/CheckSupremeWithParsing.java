package io.github.navpil.gupai.runners;

import io.github.navpil.gupai.TripletParser;
import io.github.navpil.gupai.Visualizer;
import io.github.navpil.gupai.solution.ExactPairWinningCondition;
import io.github.navpil.gupai.Combination;
import io.github.navpil.gupai.solution.ParallelSolver;
import io.github.navpil.gupai.Triplet;

import java.util.List;

public class CheckSupremeWithParsing {

    public static void main(String[] args) {
        String s = "[Triplet{[[6:1], [5:4], [3:3]]}, Triplet{[[5:5], [4:4], [6:6]]}, Triplet{[[6:4], [2:2], [4:2]]}, Triplet{[[6:2], [6:5], [3:2]]}, Triplet{[[3:3], [4:3], [6:6]]}, Triplet{[[5:3], [5:5], [2:2]]}, Triplet{[[6:1], [6:5], [6:4]]}, Triplet{[[1:1], [3:1], [5:1]]}, Triplet{[[1:1], [3:1], [2:1]]}, Triplet{[[5:2], [ - ], [4:1]]}, Triplet{[[6:3], [4:4], [5:1]]}]";

        //[Move{Triplet{[[6:4], [2:2], [4:2]]}[0] <> Triplet{[[6:3], [4:4], [5:1]]}[0]} while was FIVE_POINTS and HEAVEN will result in SUPREME and SPLENDID, Move{Triplet{[[5:2], [ - ], [4:1]]}[1] <> Triplet{[[6:3], [4:4], [5:1]]}[0]} while was none and FIVE_SONS will result in DRAGON and HEAVEN, Move{Triplet{[[1:1], [3:1], [2:1]]}[1] <> Triplet{[[6:3], [4:4], [5:1]]}[1]} while was SPLENDID and FIVE_POINTS will result in FIVE_POINTS and FIVE_SONS, Move{Triplet{[[6:1], [6:5], [6:4]]}[2] <> Triplet{[[6:3], [4:4], [5:1]]}[2]} while was FIVE_POINTS and SPLENDID will result in SPLENDID and FIVE_POINTS, Move{Triplet{[[5:5], [4:4], [6:6]]}[0] <> Triplet{[[3:3], [4:3], [6:6]]}[2]} while was BIG_THREE and SPLIT will result in SPLENDID and SPLENDID, Move{Triplet{[[5:5], [4:4], [6:6]]}[0] <> Triplet{[[6:2], [6:5], [3:2]]}[1]} while was SPLENDID and SPLENDID will result in BIG_THREE and SPLENDID, Move{Triplet{[[5:3], [5:5], [2:2]]}[1] <> Triplet{[[6:3], [4:4], [5:1]]}[1]} while was FIVE_SONS and none will result in SPLENDID and SPLENDID, Move{Triplet{[[5:3], [5:5], [2:2]]}[1] <> Triplet{[[1:1], [3:1], [2:1]]}[1]} while was SPLIT and FIVE_POINTS will result in FIVE_SONS and SPLENDID, Move{Triplet{[[5:5], [4:4], [6:6]]}[2] <> Triplet{[[5:3], [5:5], [2:2]]}[1]} while was SPLENDID and SPLENDID will result in SPLENDID and SPLIT, Move{Triplet{[[5:5], [4:4], [6:6]]}[1] <> Triplet{[[6:2], [6:5], [3:2]]}[1]} while was SPLENDID and SPLENDID will result in SPLENDID and SPLENDID, Move{Triplet{[[5:5], [4:4], [6:6]]}[2] <> Triplet{[[5:3], [5:5], [2:2]]}[1]} while was BIG_THREE and SPLIT will result in SPLENDID and SPLENDID, Move{Triplet{[[6:2], [6:5], [3:2]]}[2] <> Triplet{[[1:1], [3:1], [2:1]]}[0]} while was none and COINCIDENCE will result in SPLENDID and FIVE_POINTS, Move{Triplet{[[6:1], [5:4], [3:3]]}[1] <> Triplet{[[3:3], [4:3], [6:6]]}[2]} while was SPLENDID and SPLENDID will result in SPLENDID and SPLIT, Move{Triplet{[[5:5], [4:4], [6:6]]}[2] <> Triplet{[[5:3], [5:5], [2:2]]}[1]} while was SPLENDID and SPLENDID will result in BIG_THREE and SPLIT, Move{Triplet{[[6:1], [5:4], [3:3]]}[0] <> Triplet{[[3:3], [4:3], [6:6]]}[1]} while was SPLIT and SPLENDID will result in SPLENDID and SPLENDID, Move{Triplet{[[6:1], [5:4], [3:3]]}[1] <> Triplet{[[5:3], [5:5], [2:2]]}[1]} while was SPLENDID and SPLENDID will result in SPLIT and SPLENDID, Move{Triplet{[[6:1], [5:4], [3:3]]}[0] <> Triplet{[[5:3], [5:5], [2:2]]}[0]} while was none and FIVE_POINTS will result in SPLENDID and SPLENDID, Move{Triplet{[[5:3], [5:5], [2:2]]}[2] <> Triplet{[[1:1], [3:1], [2:1]]}[0]} while was none and FIVE_POINTS will result in FIVE_POINTS and COINCIDENCE, Move{Triplet{[[6:4], [2:2], [4:2]]}[1] <> Triplet{[[1:1], [3:1], [2:1]]}[2]} while was SPLIT and FIVE_SONS will result in FIVE_POINTS and FIVE_POINTS, Move{Triplet{[[1:1], [3:1], [5:1]]}[0] <> Triplet{[[1:1], [3:1], [2:1]]}[1]} while was SPLIT and none will result in FIVE_POINTS and FIVE_SONS, Move{Triplet{[[5:5], [4:4], [6:6]]}[0] <> Triplet{[[6:4], [2:2], [4:2]]}[0]} while was SPLIT and SPLENDID will result in SPLENDID and SPLIT, Move{Triplet{[[6:4], [2:2], [4:2]]}[0] <> Triplet{[[1:1], [3:1], [5:1]]}[1]} while was SPLENDID and SPLENDID will result in SPLENDID and SPLIT, Move{Triplet{[[6:1], [6:5], [6:4]]}[1] <> Triplet{[[1:1], [3:1], [5:1]]}[1]} while was COINCIDENCE and none will result in FIVE_POINTS and SPLENDID, Move{Triplet{[[5:5], [4:4], [6:6]]}[0] <> Triplet{[[3:3], [4:3], [6:6]]}[2]} while was SPLENDID and SPLIT will result in SPLIT and SPLENDID, Move{Triplet{[[5:5], [4:4], [6:6]]}[1] <> Triplet{[[6:1], [6:5], [6:4]]}[2]} while was FIVE_SONS and none will result in SPLENDID and COINCIDENCE, Move{Triplet{[[5:5], [4:4], [6:6]]}[0] <> Triplet{[[6:4], [2:2], [4:2]]}[0]} while was SPLENDID and SPLENDID will result in FIVE_SONS and SPLENDID, Move{Triplet{[[6:4], [2:2], [4:2]]}[0] <> Triplet{[[3:3], [4:3], [6:6]]}[2]} while was SPLIT and SPLENDID will result in SPLENDID and SPLIT, Move{Triplet{[[5:5], [4:4], [6:6]]}[1] <> Triplet{[[3:3], [4:3], [6:6]]}[2]} while was SPLENDID and SPLENDID will result in SPLENDID and SPLENDID, Move{Triplet{[[5:5], [4:4], [6:6]]}[1] <> Triplet{[[6:4], [2:2], [4:2]]}[0]} while was BIG_THREE and SPLENDID will result in SPLENDID and SPLIT]
        //[Move{Triplet{[[6:4], [2:2], [4:2]]}[0] <> Triplet{[[5:3], [5:5], [2:2]]}[0]} while was FIVE_POINTS and HEAVEN will result in SUPREME and SPLENDID, Move{Triplet{[[5:3], [5:5], [2:2]]}[0] <> Triplet{[[5:2], [ - ], [4:1]]}[1]} while was FIVE_SONS and none will result in HEAVEN and DRAGON, Move{Triplet{[[5:3], [5:5], [2:2]]}[0] <> Triplet{[[6:3], [4:4], [5:1]]}[0]} while was SPLENDID and SPLENDID will result in FIVE_SONS and SPLENDID, Move{Triplet{[[5:5], [4:4], [6:6]]}[0] <> Triplet{[[6:3], [4:4], [5:1]]}[2]} while was SPLENDID and none will result in FIVE_SONS and SPLENDID, Move{Triplet{[[5:5], [4:4], [6:6]]}[2] <> Triplet{[[5:3], [5:5], [2:2]]}[1]} while was SPLENDID and SPLENDID will result in SPLENDID and SPLENDID, Move{Triplet{[[6:1], [5:4], [3:3]]}[2] <> Triplet{[[1:1], [3:1], [2:1]]}[0]} while was none and FIVE_POINTS will result in DRAGON and SMALL_THREE, Move{Triplet{[[5:3], [5:5], [2:2]]}[2] <> Triplet{[[1:1], [3:1], [5:1]]}[2]} while was SPLENDID and SPLENDID will result in SPLENDID and SPLENDID, Move{Triplet{[[6:2], [6:5], [3:2]]}[2] <> Triplet{[[1:1], [3:1], [2:1]]}[0]} while was none and COINCIDENCE will result in SPLENDID and FIVE_POINTS, Move{Triplet{[[6:4], [2:2], [4:2]]}[1] <> Triplet{[[1:1], [3:1], [2:1]]}[2]} while was SPLIT and SPLIT will result in FIVE_POINTS and COINCIDENCE, Move{Triplet{[[6:1], [6:5], [6:4]]}[2] <> Triplet{[[1:1], [3:1], [5:1]]}[2]} while was FIVE_POINTS and none will result in SPLENDID and SPLENDID, Move{Triplet{[[6:1], [6:5], [6:4]]}[1] <> Triplet{[[1:1], [3:1], [2:1]]}[1]} while was SPLIT and FIVE_POINTS will result in FIVE_POINTS and SPLIT, Move{Triplet{[[6:1], [6:5], [6:4]]}[1] <> Triplet{[[1:1], [3:1], [2:1]]}[0]} while was FIVE_POINTS and none will result in SPLIT and FIVE_POINTS, Move{Triplet{[[5:5], [4:4], [6:6]]}[1] <> Triplet{[[6:4], [2:2], [4:2]]}[0]} while was SPLIT and SPLENDID will result in SPLENDID and SPLIT, Move{Triplet{[[5:3], [5:5], [2:2]]}[2] <> Triplet{[[6:1], [6:5], [6:4]]}[1]} while was none and COINCIDENCE will result in SPLENDID and FIVE_POINTS, Move{Triplet{[[5:5], [4:4], [6:6]]}[0] <> Triplet{[[6:4], [2:2], [4:2]]}[0]} while was BIG_THREE and SPLENDID will result in SPLIT and SPLENDID, Move{Triplet{[[3:3], [4:3], [6:6]]}[2] <> Triplet{[[6:1], [6:5], [6:4]]}[2]} while was SPLENDID and none will result in SPLENDID and COINCIDENCE]

        final List<Triplet> triplets = TripletParser.parse(s);

        final ExactPairWinningCondition exactPairWinningCondition = new ExactPairWinningCondition(Combination.SUPREME);
        Visualizer.visualize(new ParallelSolver(6, 600).solve(triplets, exactPairWinningCondition));
    }
}
